"""create_full_hvs_schema

Revision ID: b40995e378ec
Revises: 
Create Date: 2025-10-27 01:53:39.060442

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b40995e378ec'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('contact_info', sa.String(), nullable=True),
    sa.Column('registration_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patients'))
    )
    op.create_index(op.f('ix_patients_full_name'), 'patients', ['full_name'], unique=False)
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('DOCTOR', 'NURSE', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('encounters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('encounter_type', sa.Enum('TRIAGE', 'ADMISSION', 'OUTPATIENT', name='encountertype'), nullable=False),
    sa.Column('current_status', sa.Enum('ACTIVE', 'DISCHARGED', 'PENDING_TRIAGE', name='encounterstatus'), nullable=False),
    sa.Column('admitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('discharged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('medication_schedule_notes', sa.Text(), nullable=True),
    sa.Column('next_med_due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lab_report_status', sa.Enum('NOT_ORDERED', 'ORDERED', 'PENDING', 'RECEIVED', 'DELAYED', name='labreportstatus'), nullable=False),
    sa.Column('lab_report_expected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_encounters_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_encounters'))
    )
    op.create_index(op.f('ix_encounters_current_status'), 'encounters', ['current_status'], unique=False)
    op.create_index(op.f('ix_encounters_encounter_type'), 'encounters', ['encounter_type'], unique=False)
    op.create_index(op.f('ix_encounters_id'), 'encounters', ['id'], unique=False)
    op.create_index(op.f('ix_encounters_patient_id'), 'encounters', ['patient_id'], unique=False)
    op.create_table('clinical_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('note_type', sa.Enum('DOCTOR_DICTATION', 'NURSE_UPDATE', 'HANDOFF_SUMMARY', 'OTHER', name='notetype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('encounter_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_clinical_notes_author_id_users')),
    sa.ForeignKeyConstraint(['encounter_id'], ['encounters.id'], name=op.f('fk_clinical_notes_encounter_id_encounters')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_clinical_notes'))
    )
    op.create_index(op.f('ix_clinical_notes_author_id'), 'clinical_notes', ['author_id'], unique=False)
    op.create_index(op.f('ix_clinical_notes_encounter_id'), 'clinical_notes', ['encounter_id'], unique=False)
    op.create_index(op.f('ix_clinical_notes_id'), 'clinical_notes', ['id'], unique=False)
    op.create_index(op.f('ix_clinical_notes_note_type'), 'clinical_notes', ['note_type'], unique=False)
    op.create_table('nurse_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'DELAYED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('encounter_id', sa.Integer(), nullable=False),
    sa.Column('assigned_nurse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_nurse_id'], ['users.id'], name=op.f('fk_nurse_tasks_assigned_nurse_id_users')),
    sa.ForeignKeyConstraint(['encounter_id'], ['encounters.id'], name=op.f('fk_nurse_tasks_encounter_id_encounters')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nurse_tasks'))
    )
    op.create_index(op.f('ix_nurse_tasks_assigned_nurse_id'), 'nurse_tasks', ['assigned_nurse_id'], unique=False)
    op.create_index(op.f('ix_nurse_tasks_due_at'), 'nurse_tasks', ['due_at'], unique=False)
    op.create_index(op.f('ix_nurse_tasks_encounter_id'), 'nurse_tasks', ['encounter_id'], unique=False)
    op.create_index(op.f('ix_nurse_tasks_id'), 'nurse_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_nurse_tasks_status'), 'nurse_tasks', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nurse_tasks_status'), table_name='nurse_tasks')
    op.drop_index(op.f('ix_nurse_tasks_id'), table_name='nurse_tasks')
    op.drop_index(op.f('ix_nurse_tasks_encounter_id'), table_name='nurse_tasks')
    op.drop_index(op.f('ix_nurse_tasks_due_at'), table_name='nurse_tasks')
    op.drop_index(op.f('ix_nurse_tasks_assigned_nurse_id'), table_name='nurse_tasks')
    op.drop_table('nurse_tasks')
    op.drop_index(op.f('ix_clinical_notes_note_type'), table_name='clinical_notes')
    op.drop_index(op.f('ix_clinical_notes_id'), table_name='clinical_notes')
    op.drop_index(op.f('ix_clinical_notes_encounter_id'), table_name='clinical_notes')
    op.drop_index(op.f('ix_clinical_notes_author_id'), table_name='clinical_notes')
    op.drop_table('clinical_notes')
    op.drop_index(op.f('ix_encounters_patient_id'), table_name='encounters')
    op.drop_index(op.f('ix_encounters_id'), table_name='encounters')
    op.drop_index(op.f('ix_encounters_encounter_type'), table_name='encounters')
    op.drop_index(op.f('ix_encounters_current_status'), table_name='encounters')
    op.drop_table('encounters')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_index(op.f('ix_patients_full_name'), table_name='patients')
    op.drop_table('patients')
    # ### end Alembic commands ###
